# Multi-stage Docker build for PayPollen API
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY apps/api/package*.json ./
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY apps/api/src ./src
COPY apps/api/tsconfig.json ./

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Create app directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S paypollen -u 1001

# Copy built application
COPY --from=builder --chown=paypollen:nodejs /app/dist ./dist
COPY --from=builder --chown=paypollen:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=paypollen:nodejs /app/package*.json ./

# Create logs directory
RUN mkdir -p logs && chown paypollen:nodejs logs

# Switch to non-root user
USER paypollen

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start the application
CMD ["node", "dist/server.js"]
